name: 🧪 Test with coverage 📊

on:
  workflow_call:

jobs:
  coverage:
    name: 🧪 Test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4

      # Install lcov
      - name: ⚙️ Install lcov
        run: |
          sudo apt-get update
          sudo apt-get -y install lcov

      # Setup Flutter
      - name: ⚙️ Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      
      - name: 🧪🔐 Setup Android Env, Keystore and Properties
        run: |
          echo "${{ secrets.ANDROID_KEY_JKS_BASE64 }}" | base64 --decode > android/app/fee-remit-key.jks
          echo "${{ secrets.ANDROID_GOOGLE_SERVICES }}" | base64 --decode > android/app/google-services.json
          echo "${{ secrets.ANDROID_GOOGLE_CLOUD_SERVICE }}" | base64 --decode > android/app/google-cloud-services.json
          echo "${{ secrets.ANDROID_KEY_PROPERTIES }}" | base64 --decode > android/key.properties
          echo "${{ secrets.ANDROID_LOCAL_PROPERTIES }}" | base64 --decode > android/local.properties
          echo "${{ secrets.ENV }}" | base64 --decode > .env
    
      # Install dependencies for all packages
      - name: ⚙️ Install and Generate dependencies
        run: |
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs

      # Run tests with coverage
      - name: 🧪 Run tests with coverage
        run: |
          flutter test --machine --coverage > test_reports/coverage_test_report.json

      # Generate HTML coverage report
      - name: 🧪📊 Generate HTML coverage report
        run: |
          genhtml test_coverage/lcov.info -o test_coverage/html

      # Publish test results
      - name: 🧪✅❌ Publish test results
        id: compute_test_results
        uses: dorny/test-reporter@v1.9.1
        with:
          name: '🧪📊 Unit tests report'
          path: test_reports/*_test_report.json
          reporter: 'flutter-json'
          max-annotations: '50'
          token: ${{ secrets.GITHUB_TOKEN }}
     
      # Publish coverage report
      - name: 🧪📊 Publish coverage report
        if: github.event_name == 'pull_request'
        uses: romeovs/lcov-reporter-action@v0.4.0
        with:
          lcov-file: test_coverage/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          title: 'Coverage Report'

      # Extract test coverage percentage
      - name: 🥤 Extract test coverage percentage
        if: github.event_name == 'push' && github.event.ref == 'refs/heads/main'
        run: |
          coverage=$(grep -o 'class="headerCovTableEntryLo">[^<]*<' test_coverage/html/index.html | grep -o '[0-9.]*' | head -n 1)
          echo "Coverage percentage: $coverage"
          echo "coverage_percentage=$coverage" >> $GITHUB_ENV

  
