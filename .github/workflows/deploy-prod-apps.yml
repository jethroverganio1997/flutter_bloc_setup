name: üì¶üöÄ Build & deploy Prod release

permissions: write-all

on: workflow_dispatch

jobs:
  gitRelease:
    name: Create git release for Prod app
    runs-on: ubuntu-latest
    outputs:
      new_pubspec_version: "${{ steps.get_new_pubspec_version.outputs.next_pubspec_version }}"
    steps:
      - name: üëÅÔ∏è Check branch validity
        if: github.ref != 'refs/heads/main'
        run: |
          echo "‚ö†Ô∏è Error: you tried to create a release from '${{ github.ref }}' branch but production releases can only be created from 'main' branch"
    
      - name: ‚¨áÔ∏è Checkout repository with tags
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
     
      - name: üè∑Ô∏èüß™ Get latest UAT release
        id: get_latest_uat_release
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          prefix: "release/uat/"
          fallback: 0.0.1

      - name: ‚öôÔ∏è Prepare semantic release configuration
        run: |
          cp .releaserc.prod.json .releaserc.json

      - name: üè∑Ô∏è‚úçÔ∏è Create new Prod release with tag and changelog
        id: semantic_release_info
        uses: cycjimmy/semantic-release-action@v4.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          semantic_version: 19  

      - name: üìù Make semver.sh executable
        run: chmod +x ./scripts/semver.sh
     
      - name: üìù Edit pubspec version
        id: get_new_pubspec_version
        run: |
          last_uat_release=$(echo "${{ steps.get_latest_uat_release.outputs.tag }}" | sed -E "s/release\/uat\/(.*)/\1/")
          next_pubspec_version=$(./scripts/semver.sh "$last_uat_release" "${{ steps.semantic_release_info.outputs.new_release_version }}")

          echo "pubspec.yaml before update:"
          cat pubspec.yaml
          
          sed -i.bak -E "s/^version: .*/version: $next_pubspec_version/" pubspec.yaml
          
          echo "pubspec.yaml after update:"
          cat pubspec.yaml

          echo "next_pubspec_version=$next_pubspec_version" >> $GITHUB_OUTPUT

      # help to update pubspec.yaml file with the new version number
      - name: üîÄ Push bump commit with changelog to repository
        uses: stefanzweifel/git-auto-commit-action@v5.0.1
        with:
          commit_message: "chore(release): bump to version ${{ steps.get_new_pubspec_version.outputs.next_pubspec_version }} [skip ci]"
     
    #  to track version code and name
      - name: üè∑Ô∏è‚úçÔ∏è Create new UAT release tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "release/uat/${{ steps.get_new_pubspec_version.outputs.next_pubspec_version }}"
          message: "Prod release ${{ steps.get_new_pubspec_version.outputs.next_pubspec_version }}"
          github_token: ${{ secrets.FEE_REMIT_PAT }}

  
  deployUat:
    name: Deploy Prod
    uses: ./.github/workflows/_deploy_env_apps.yml
    needs: gitRelease
    secrets: inherit
    with:
      android-environment-name: 'Android Prod'
      android-environment-url: 'https://play.google.com/apps/internaltest/4700894028186143016'
      android-package-name: 'com.fee.mobiletw.remit'
      android-release-status: 'completed'
      ios-environment-name: 'iOS Prod'
      ios-environment-url: 'https://appstoreconnect.apple.com/apps/1664853019/testflight'
      huawei-environment-name: 'Huawei Prod'
      huawei-environment-url: 'https://developer.huawei.com/consumer/en/service/josp/agc/index.html'
      short-environment-name: 'Prod'
      new-pubspec-version: ${{ needs.gitRelease.outputs.new_pubspec_version }}